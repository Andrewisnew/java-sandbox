package edu.andrewisnew.java.topics.concurrency.lessons.lesson08;
/*
Разделяй и властвуй. Если задача достаточно маленькая - решаем. Иначе бьем на подзадачи, решаем каждую, мержим.
Если делать блокирующую invoke all, то будут потоки, которые будут ждать решения подзадач.

Балансировка:
1. Work arbitrage - есть арбитр, который распределяет задачи. Например очередь с задачами. Проблема - локи на queue
2. Work dealing - у каждого потока свой набор задач. Если поток не успевает, то он отдаёт задачу другому.
3. Work stealing - у каждого свой набор. Если нет задач, то забирает у другого.

В Fork Join 3 подход.
В каждом треде своя очередь. С головой работают как лок фри. С хвостом с локами (могут несколько прити и попытаться
забрать). Когда задач становится мало, голова тоже блокирующей становится
 */
public class Block1ForkJoin {
    public static void main(String[] args) {

    }
}
